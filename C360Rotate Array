import java.util.ArrayList;

public class Solution {
    public static ArrayList<Integer> rotateArray(ArrayList<Integer> arr, int k) {
        int n = arr.size();
        k = k % n;  // In case k is greater than the length of the array
        
        // Step 1: Copy the first k elements to a temporary array
        ArrayList<Integer> temp = new ArrayList<>(k);
        for (int i = 0; i < k; i++) {
            temp.add(arr.get(i));
        }
        
        // Step 2: Shift the rest of the array to the left by k positions
        for (int i = k; i < n; i++) {
            arr.set(i - k, arr.get(i));
        }
        
        // Step 3: Place the elements from the temporary array at the end of the original array
        for (int i = 0; i < k; i++) {
            arr.set(n - k + i, temp.get(i));
        }
        
        return arr;
    }

   
}
